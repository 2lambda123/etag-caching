name: Isolated Release
on:
  workflow_dispatch:

jobs:
  create-artifacts:
    name: Create unsigned artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          cache: sbt
      - name: Generate artifacts
        run: sbt publish
      - uses: actions/cache/save@v3
        id: cache
        with:
          path: /tmp/funky
          key: unsigned-${{ github.run_id }}-${{ github.run_attempt }}


  sign:
    name: Sign
    needs: create-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache/restore@v3
        with:
          path: /tmp/funky
          key: unsigned-${{ github.run_id }}-${{ github.run_attempt }}
          fail-on-cache-miss: true
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          gpg-private-key: ${{ secrets.AUTOMATED_MAVEN_RELEASE_PGP_SECRET }}
      - name: Sign artifacts
        run: |
          key_fingerprint_and_email=$(gpg2 --list-secret-keys --list-options show-only-fpr-mbox)
          key_fingerprint=$(echo $key_fingerprint_and_email | awk '{print $1}')
          key_email=$(echo $key_fingerprint_and_email | awk '{print $2}')
          
          ls -lR /tmp/funky
          find /tmp/funky -type f -exec gpg -a --local-user "$key_fingerprint" --detach-sign {} \;
          ls -lR /tmp/funky
      - uses: actions/cache/save@v3
        with:
          path: /tmp/funky
          key: signed-${{ github.run_id }}-${{ github.run_attempt }}


  release:
    name: Release
    needs: sign
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      SONATYPE_USERNAME: guardian.automated.maven.release
      SONATYPE_PASSWORD: ${{ secrets.AUTOMATED_MAVEN_RELEASE_SONATYPE_PASSWORD }}
    steps:
      - uses: actions/cache/restore@v3
        with:
          path: /tmp/funky
          key: signed-${{ github.run_id }}-${{ github.run_attempt }}
          fail-on-cache-miss: true
      - name: Create tiny sbt project to perform Sonatype upload
        run: |
          cat <<EOT > build.sbt
          sonatypeBundleDirectory := new File("/tmp/funky")
          sonatypeProfileName := "com.gu"
          EOT
          
          mkdir project
          echo 'addSbtPlugin("org.xerial.sbt" % "sbt-sonatype" % "3.9.21")' > project/plugins.sbt
          echo 'sbt.version = 1.9.7' > project/build.properties
          
          ls -lR .
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          cache: sbt
      - name: Release
        run: |
          sbt "sonatypeBundleRelease"
